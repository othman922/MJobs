@page "/"

<style>
    .custom-card {
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
        transition: 0.3s;
        border-radius: 5px; /* أضف حواف مستديرة للبطاقة */
    }

        .custom-card:hover {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
        }

    .custom-header {
        background-color: #4e73df; /* لون خلفية الرأس */
        color: white; /* لون النص */
        padding: 16px 24px; /* تباعد داخلي */
    }

    .custom-body {
        padding: 2rem; /* تباعد داخلي أكبر */
    }

    .custom-button {
        width: 100%; /* اجعل الأزرار بعرض الحاوية */
    }

    .text-right {
        text-align: right; /* اجعل النص يتوافق مع اليمين */
    }

    .text-left {
        text-align: left; /* اجعل النص يتوافق مع اليسار */
    }

    .mt-3 {
        margin-top: 1rem; /* تقليل المسافة العلوية */
    }

    .btn-primary {
        background-color: #4e73df;
        border-color: #4e73df;
    }

    .btn-secondary {
        background-color: #f8f9fa;
        color: #4e73df;
        border-color: #f8f9fa;
    }

    .input-group-text {
        border-radius: 0.25rem;
        background-color: #f8f9fa;
        border: 1px solid #d1d3e2;
        color: #5a5c69;
        padding: 0.375rem 0.75rem;
    }

    .form-control {
        border-radius: 0.25rem;
        border: 1px solid #d1d3e2;
        padding: 0.375rem 0.75rem;
    }

    .form-check-input {
        margin-top: 0.3rem;
        margin-left: 0;
    }

    .form-check-label {
        margin-left: 0.5rem;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    /* إضافة التنسيقات الخاصة بـ MatBlazor إذا لزم الأمر */
</style>

<div class="container mt-3 ">
    <div class="row justify-content-center">
        <div class="col-md-8 ">
            <div class="card custom-card">
                <div class="card-header custom-header text-center">
                    <span>mJobsg</span>
                </div>
            
                <div class="card-body custom-body">
                    <EditForm Model="@jobModel" OnValidSubmit="@HandleValidSubmit" class=" row">
                                <div class="col-md-6">
                                    <h3 class="text-center"> Allgemeine Information</h3>
                        <DataAnnotationsValidator />
                        <div class="form-group">
                            <label for="category">Kategorie</label>
                            <InputSelect id="category" class="form-control" @bind-Value="jobModel.Category">
                                <option value="Löschen Predi">Löschen Predi</option>
                               
                                <option value="deletePredi">Datensätze aus der PREDI-Tabelle löschen</option>
                                <option value="sanctionList">Erstellen einer Sanktionstabelle</option>
                                <option value="deleteFiles">Löschen von Dateien in einem Ordner</option>
                                <option value="encryptCustomers">Kunden nach DSGVO verschlüsseln</option>
                            </InputSelect>
                        </div>
                        <div class="form-group">
                            <label for="jobName">Name des Jobs</label>
                            <InputText id="jobName" class="form-control" @bind-Value="jobModel.JobName" />
                        </div>
                        <div class="form-group">
                            <label for="description">Beschreibung</label>
                            <InputTextArea id="description" class="form-control" @bind-Value="jobModel.Description" />
                        </div>
                        <div class="form-group">
                            <label for="age">Datensätze älter als x Tage:</label>
                            <InputNumber id="age" class="form-control" @bind-Value="jobModel.DaysOld" />
                        </div> 
                        </div> 
                        <div class="col-md-6">
                            <h3> Zeitplanung</h3>

                        <div class="form-group">
                            <i class="bi bi-alarm-fill"></i>
                            <label for="interval">Zeitraum</label>
                            <InputSelect id="interval" class="form-control" @bind-Value="jobModel.Interval">
                               
                                <option value="minutes">alle x Minuten</option>
                                <option value="hours">alle x Stunden</option>
                                <option value="daily">täglich zu einer bestimmten Uhrzeit</option>
                                <option value="weekly">wöchentlich, an einem bestimmten Tag und Uhrzeit</option>
                                <option value="monthly">monatlich, an einem bestimmten Tag und Uhrzeit</option>
                            </InputSelect>
                        </div>
                            <div class="form-group form-check">
                                <InputCheckbox id="activated" class="form-check-input" @bind-Value="jobModel.Activated" />
                                <label for="activated" class="form-check-label">Aktiviert?</label>
                            </div>
                            <div>
                                <p>
            <MatDatePicker @bind-Value="@Date1"></MatDatePicker>
        </p>
        <MatButton OnClick="@(_ =>
                              {
                                  Date1 = DateTime.Now;
                              })">
            Now
        </MatButton>
        <MatButton OnClick="@(_ =>
                              {
                                  Date1 = null;
                              })">
            Empty
        </MatButton>
 
        <span>@(Date1.HasValue ? Date1.Value.ToLocalTime().ToString() : "")</span>
 


                            </div>
                        </div>
                        
                    </EditForm>
                    
                    <div class="row">
                        <div class="col-md-6 text-left mt-3">
                            <button type="submit" class="btn btn-secondary">Abbrechen</button>
                        </div>
                        <div class="col-md-6  mt-3" ; style="text-align:right">
                            <button type="button" class="btn btn-primary"> Speichern</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private JobModel jobModel = new JobModel();

    public Home()
    {
    }

    private void HandleValidSubmit()
    {
        
    }

    public class JobModel
    {
        public string Category { get; set; }
        public string JobName { get; set; }
        public string Description { get; set; }
        public int? DaysOld { get; set; }
        public string Interval { get; set; }
        public bool Activated { get; set; }
        
    }
    public DateTime? Date1 { get; set; } = DateTime.Now.AddDays(-10);

}
